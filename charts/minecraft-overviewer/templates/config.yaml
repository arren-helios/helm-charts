apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "overviewer.fullname" . }}
  labels:
    {{- include "overviewer.labels" . | nindent 4 }}
    app.kubernetes.io/component: render
data:
  config.py: |
    global escape
    from html import escape

    worlds["World"] = "/var/lib/minecraft/world"
    outputdir = "/usr/share/nginx/html"
    texturepath = "/opt/textures"
    defaultzoom = 5

    def playerIcons(poi):
        if poi['id'] == 'Player':
            poi['icon'] = "https://overviewer.org/avatar/%s" % poi['EntityId']
            return "Last known location for %s" % poi['EntityId']

    def signFilter(poi):
        if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
            return escape("\n".join([poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']]))

    def townFilter(poi):
        if poi['id'] == 'Town':
            try:
                return (poi['name'], poi['description'])
            except KeyError:
                return poi['name'] + '\n'

    renders["day"] = {
        "world": "World",
        "rendermode": "lighting",
        "title": "Day",
        "markers": [
            dict(name="Players", filterFunction=playerIcons, checked=True, createInfoWindow=False),
            dict(name="Signs", filterFunction=signFilter),
            dict(name="Towns", filterFunction=townFilter, icon="markers/marker_town.png"),
        ],
    }

    renders["night"] = {
        "world": "World",
        "rendermode": "night",
        "title": "Night",
        "markers": [
            dict(name="Players", filterFunction=playerIcons, checked=True, createInfoWindow=False),
            dict(name="Signs", filterFunction=signFilter),
            dict(name="Towns", filterFunction=townFilter, icon="markers/marker_town.png"),
        ],
    }

    renders["cave"] = {
        "world": "World",
        "rendermode": "cave",
        "title": "Cave",
        "markers": [
            dict(name="Players", filterFunction=playerIcons, checked=True, createInfoWindow=False),
            dict(name="Signs", filterFunction=signFilter),
        ],
    }

    # renders["nether"] = {
    #     "world": "World",
    #     "dimension": "nether",
    #     "rendermode": "nether_lighting",
    #     "title": "Nether",
    #     "markers": [
    #         dict(name="Players", filterFunction=playerIcons, checked=True, createInfoWindow=False),
    #     ],
    # }

    # renders["end"] = {
    #     "world": "World",
    #     "dimension": "end",
    #     "rendermode": [
    #         Base(),
    #         EdgeLines(),
    #         SmoothLighting(strength=0.5),
    #     ],
    #     "title": "End",
    #     "markers": [
    #         dict(name="Players", filterFunction=playerIcons, checked=True, createInfoWindow=False),
    #     ],
    # }
